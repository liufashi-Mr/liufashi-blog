diff --git a/node_modules/hexo-asset-image/index.js b/node_modules/hexo-asset-image/index.js
index d651afa..d6012e3 100644
--- a/node_modules/hexo-asset-image/index.js
+++ b/node_modules/hexo-asset-image/index.js
@@ -6,24 +6,18 @@ function getPosition(str, m, i) {
   return str.split(m, i).join(m).length;
 }
 
+var version = String(hexo.version).split('.');
 hexo.extend.filter.register('after_post_render', function(data){
   var config = hexo.config;
   if(config.post_asset_folder){
-    var link = data.permalink;
-    var beginPos = getPosition(link, '/', 3) + 1;
-    var appendLink = '';
-    // In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".
-    // if not with index.html endpos = link.lastIndexOf('.') + 1 support hexo-abbrlink
-    if(/.*\/index\.html$/.test(link)) {
-      // when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html
-      // image in xxtitle/ will go to xxtitle/index/
-      appendLink = 'index/';
-      var endPos = link.lastIndexOf('/');
-    }
-    else {
-      var endPos = link.lastIndexOf('.');
-    }
-    link = link.substring(beginPos, endPos) + '/' + appendLink;
+    	var link = data.permalink;
+	if(version.length > 0 && Number(version[0]) == 3)
+	   var beginPos = getPosition(link, '/', 1) + 1;
+	else
+	   var beginPos = getPosition(link, '/', 3) + 1;
+	// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".
+	var endPos = link.lastIndexOf('/') + 1;
+    link = link.substring(beginPos, endPos);
 
     var toprocess = ['excerpt', 'more', 'content'];
     for(var i = 0; i < toprocess.length; i++){
@@ -37,33 +31,32 @@ hexo.extend.filter.register('after_post_render', function(data){
       });
 
       $('img').each(function(){
-        if ($(this).attr('src')){
-          // For windows style path, we replace '\' to '/'.
-          var src = $(this).attr('src').replace('\\', '/');
-          if(!(/http[s]*.*|\/\/.*/.test(src)
-            || /^\s+\//.test(src)
-            || /^\s*\/uploads|images\//.test(src))) {
-            // For "about" page, the first part of "src" can't be removed.
-            // In addition, to support multi-level local directory.
-            var linkArray = link.split('/').filter(function(elem){
-              return elem != '';
-            });
-            var srcArray = src.split('/').filter(function(elem){
-              return elem != '' && elem != '.';
-            });
-            if(srcArray.length > 1)
-            srcArray.shift();
-            src = srcArray.join('/');
-
-            $(this).attr('src', config.root + link + src);
-            console.info&&console.info("update link as:-->"+config.root + link + src);
-          }
-        }else{
-          console.info&&console.info("no src attr, skipped...");
-          console.info&&console.info($(this));
-        }
+		if ($(this).attr('src')){
+			// For windows style path, we replace '\' to '/'.
+			var src = $(this).attr('src').replace('\\', '/');
+			if(!/http[s]*.*|\/\/.*/.test(src) &&
+			   !/^\s*\//.test(src)) {
+			  // For "about" page, the first part of "src" can't be removed.
+			  // In addition, to support multi-level local directory.
+			  var linkArray = link.split('/').filter(function(elem){
+				return elem != '';
+			  });
+			  var srcArray = src.split('/').filter(function(elem){
+				return elem != '' && elem != '.';
+			  });
+			  if(srcArray.length > 1)
+				srcArray.shift();
+			  src = srcArray.join('/');
+			  $(this).attr('src', config.root + link + src);
+			  console.info&&console.info("update link as:-->"+config.root + link + src);
+			}
+		}else{
+			console.info&&console.info("no src attr, skipped...");
+			console.info&&console.info($(this));
+		}
       });
       data[key] = $.html();
     }
   }
 });
+
